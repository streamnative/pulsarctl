name: Pulsarctl Release

on:
  release:

jobs:
  upload:
    name: Upload go build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: 1.12
        id: go

      - name: Create release directory
        run: mkdir release

      - name: Build amd64 linux files
        run: |
          DIR=pulsarctl-amd64-linux
          mkdir ${DIR}
          version=`cat VERSION`
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o pulsarctl -ldflags "-X github.com/streamnative/pulsarctl/pkg/pulsar.ReleaseVersion=Pulsarctl-Go-$version" .
          mv pulsarctl ${DIR}
          cp -r plugins ${DIR}
          tar -czf ${DIR}.tar.gz ${DIR}

      - name: Build 386 linux files
        run: |
          DIR=pulsarctl-386-linux
          mkdir ${DIR}
          version=`cat VERSION`
          CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -o pulsarctl -ldflags "-X github.com/streamnative/pulsarctl/pkg/pulsar.ReleaseVersion=Pulsarctl-Go-$version" .
          mv pulsarctl ${DIR}
          cp -r plugins ${DIR}
          tar -czf ${DIR}.tar.gz ${DIR}

      - name: Build amd64 darwin files
        run: |
          DIR=pulsarctl-amd64-darwin
          mkdir ${DIR}
          version=`cat VERSION`
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o pulsarctl -ldflags "-X github.com/streamnative/pulsarctl/pkg/pulsar.ReleaseVersion=Pulsarctl-Go-$version" .
          mv pulsarctl ${DIR}
          cp -r plugins ${DIR}
          tar -czf ${DIR}.tar.gz ${DIR}


      - name: Build 386 darwin files
        run: |
          DIR=pulsarctl-386-darwin
          mkdir ${DIR}
          version=`cat VERSION`
          CGO_ENABLED=0 GOOS=darwin GOARCH=386 go build -o pulsarctl -ldflags "-X github.com/streamnative/pulsarctl/pkg/pulsar.ReleaseVersion=Pulsarctl-Go-$version" .
          mv pulsarctl ${DIR}
          cp -r plugins ${DIR}
          tar -czf ${DIR}.tar.gz ${DIR}

      - name: Build amd64 windows files
        run: |
          DIR=pulsarctl-amd64-windows
          mkdir ${DIR}
          version=`cat VERSION`
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o  pulsarctl.exe -ldflags "-X github.com/streamnative/pulsarctl/pkg/pulsar.ReleaseVersion=Pulsarctl-Go-$version" .
          mv pulsarctl ${DIR}
          cp -r plugins ${DIR}
          tar -czf ${DIR}.tar.gz ${DIR}


      - name: Build 386 windows files
        run: |
          DIR=pulsarctl-386-windows
          mkdir ${DIR}
          version=`cat VERSION`
          CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -o  pulsarctl.exe -ldflags "-X github.com/streamnative/pulsarctl/pkg/pulsar.ReleaseVersion=Pulsarctl-Go-$version" .
          mv pulsarctl ${DIR}
          cp -r plugins ${DIR}
          tar -czf ${DIR}.tar.gz ${DIR}

      - name: build-site
        run: |
          make cli

      - name: publish
        uses: skx/github-action-publish-binaries@release-0.11
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: 'pulsarctl*.tar.gz'
